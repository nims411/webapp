1. Creating the Maven Web Project

Run below command in commandline from Project folder

mvn archetype:generate -DgroupId=com.maven.app -DartifactId=webapp -DarchetypeArtifactId=maven-archetype-webapp -DinteractiveMode=false

2. Add the below maven-compiler-plugin to pom.xml

<plugin>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>3.3</version>
    <configuration>
     <source>1.8</source>
     <target>1.8</target>
    </configuration>
   </plugin>


3. Add J2EE dependency to pom.xml

<dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>javax.servlet-api</artifactId>
    <version>3.1.0</version>
    <scope>provided</scope>
</dependency>
<dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>jsp-api</artifactId>
    <version>2.0</version>
    <scope>provided</scope>
</dependency>

4. Adding a Simple Servlet

Add SimpleServlet.java file under webapp/src/main/java/com/javadevelopersguide/webapp/web/ folder with below contents

package com.javadevelopersguide.webapp.web;

import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class SimpleServlet extends HttpServlet {
 
 private static final long serialVersionUID = 1L;

    public void doGet(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
         PrintWriter out = response.getWriter();
         out.println(" SimpleServlet Executed");
         out.flush();
         out.close();
    }
}

5. Mapping the Simple Servlet in Deployment Descriptor(web.xml)

Open src/main/webapp/WEB-INF/web.xml and change the contents to 

<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
    <display-name>Archetype Created Web Application</display-name>
    <servlet>
        <servlet-name>simple</servlet-name>
        <servlet-class>
           com.javadevelopersguide.webapp.web.SimpleServlet
        </servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>simple</servlet-name>
        <url-pattern>/simple</url-pattern>
    </servlet-mapping>
</web-app>

6. Configure Jetty Plugin

Add below build contents to pom.xml

<build>
 <finalName>maven-webapp</finalName>
 <plugins>
     <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.3</version>
        <configuration>
            <source>1.8</source>
            <target>1.8</target>
        </configuration>
     </plugin>
     <plugin>
         <groupId>org.mortbay.jetty</groupId>
         <artifactId>maven-jetty-plugin</artifactId>
     </plugin>
 </plugins>
</build>

Go to the project directory and run the following command to run this Maven project in the Jetty server:

mvn clean package

mvn -Djetty.port=8888 jetty:run

7. Demo

Once the Jetty server is started just hit the below URL in a browser:

http://localhost:8888/webapp/simple
http://localhost:8888/webapp/


Reference : https://www.javaguides.net/2018/06/Guide-to-Create-a-Simple-Maven-Web-Application.html